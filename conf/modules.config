/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'METHYLEXTRACT' {
        ext.args = "-c 1 -t 15 -q 5 --ATAC 'Y'"
    }

    withName: 'TRIMGALORE' {
        ext.args = '-q 20 --stringency 2 -e 0.1'
    }

    withName: 'BISMARK_ALIGN' {
        ext.args = '--non_directional -X 500'
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BEDTOOLS_GENOMECOV' {
        ext.args = '-bg'
    }

    withName: 'SAMTOOLS_SORTBYNAME' {
        ext.args = '-n'
        ext.prefix = { "${meta.id}.sort_name.bam" }
    }

    withName: 'BEDTOOLS_BAMTOBED' {
        ext.args = '-bedpe'
    }

    withName: 'MACS2_CALLPEAK' {
        ext.args   = { [
            '--nomodel',
            '--nolambda',
            '--call-summits',
            '--keep-dup all',
            '--format',
            meta.single_end ? 'BED' : 'BEDPE'
        ].join(' ').trim() }
    }

    withName: 'IGVTOOLS_TOTDF_RATIO' {
        ext.args = '-z 10'
        ext.prefix = { "${meta.id}_ratio" }
    }

    withName: 'IGVTOOLS_TOTDF_DEPTH' {
        ext.args = '-z 10'
        ext.prefix = { "${meta.id}_depth" }
    }

    withName: 'PLOTTSS' {
        ext.args = '-wa -wb'
    }

    withName: '.*:FOOTPRINTING:REFORMATRATIOADJUST' {
        ext.args2 = "'BEGIN {OFS=\"\\t\"} {if (\$9 > 1) ratio = 1; else ratio = \$9; print \$1, \$2, \$3, \$4, \$5, ratio, substr(\$6, 5, 1)}'"
        ext.prefix = { "${meta.id}_sites.ratio_adj" }
        ext.suffix = 'text'
    }

    withName: '.*:FOOTPRINTING:BEDTOOLS_INTERSECT' {
        ext.args = '-u'
        ext.prefix = { "${meta.id}_high_score_peaks_intx" }
        ext.suffix = 'bed'
    }

    withName: '.*:FOOTPRINTING:FILTERBYDEPTH' {
        ext.args = { "-v awkDepth=${meta.depth}" }
        ext.args2 = "'BEGIN {OFS=\"\\t\"} \$4 + \$5 >= awkDepth { print \$1, \$2, \$3, \$7, \$4 + \$5, \$6}'"
        ext.prefix = { "${meta.id}_d${meta.depth}" }
        ext.suffix = 'bed'
    }

    withName: '.*:FOOTPRINTING:TABIX_BGZIPTABIX' {
        ext.args2 = "-p bed"
        ext.prefix = { "${meta.id}_d${meta.depth}" }
    }
    
    withName: '.*:FOOTPRINTING:GETOPENREGION' {
        ext.args = '-r 0.7'
        ext.prefix = { "${meta.id}_d${meta.depth}" }
    }

    withName: '.*:FOOTPRINTING:SLOPBOTH' {
        ext.args2 = "'BEGIN {OFS=\"\\t\"} {print \$1, (\$2 - 75 < 0 ? 0 : \$2 - 75), \$3 + 75}'"
        ext.prefix = { "${meta.id}_d${meta.depth}_f75" }
        ext.suffix = 'bed'
    }

    withName: '.*:FOOTPRINTING:BEDTOOLS_MERGE' {
        ext.prefix = { "${meta.id}_d${meta.depth}_f75_merged" }
    }

    withName: '.*:FOOTPRINTING:DNASENUM' {
        ext.args2 = "'BEGIN {OFS=\"\\t\"; i = 1} {print \$1, \$2, \$3, \"DNase-\"i; i++}'"
        ext.prefix = { "${meta.id}_d${meta.depth}_f75_merged_fp" }
        ext.suffix = 'bed'
    }

    withName: '.*:FOOTPRINTING:PEAKINTERSECT' {
        ext.args = '-wa -wb'
        ext.prefix = { "${meta.id}_d${meta.depth}_DNase_raw" }
        ext.suffix = 'bed'
    }

    withName: '.*:FOOTPRINTING:GNU_CUT' {
        ext.args = '-f 1-3,5,6,10'
        ext.prefix = { "${meta.id}_d${meta.depth}_DNase_cut" }
        ext.suffix = 'bed'
    }

    withName: '.*:FOOTPRINTING:GNU_SORT' {
        ext.args = '-k 1,1 -k 2,2n'
        ext.prefix = { "${meta.id}_d${meta.depth}_DNase" }
        ext.suffix = 'bed'
    }

    withName: '.*:FOOTPRINTING:GETFPCOUNTS' {
        ext.prefix = { "${meta.id}_d${meta.depth}_DNase_count" }
    }

    withName: '.*:FOOTPRINTING:GETUNINFOSITES' {
        ext.prefix = { "${meta.id}_d${meta.depth}_DNase_uninfo" }
        ext.suffix = 'bed'
    }
    
    withName: '.*:FOOTPRINTING:FOOTPRINTEXT' {
        ext.prefix = { "${meta.id}_d${meta.depth}_DNase_fp" }
    }

    withName: '.*:FOOTPRINTING:GNU_TAIL' {
        ext.args = '-n +2'
        ext.prefix = { "${meta.id}_d${meta.depth}_DNase_fp_via_tail" }
        ext.suffix = 'bed'
    }

    withName: '.*:FOOTPRINTING:FINALINTERSECT' {
        ext.args = '-u -f 0.51'
        ext.prefix = { "${meta.id}_d${meta.depth}_DNase_fp_or" }
        ext.suffix = 'bed'
    }

    withName: '.*:FOOTPRINTING:FILTERP' {
        ext.args2 = "'\$4 <= 0.0000001'"
        ext.prefix = { "${meta.id}_d${meta.depth}_DNase_fp_or_1e-7" }
        ext.suffix = 'bed'
    }
}
